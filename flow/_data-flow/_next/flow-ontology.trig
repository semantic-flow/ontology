@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix schema: <https://schema.org/> .
@prefix mesh: <https://semantic-flow.github.io/ontology/mesh/> .
@prefix node: <https://semantic-flow.github.io/ontology/node/> .
@prefix flow: <https://semantic-flow.github.io/ontology/flow/> .

<> a owl:Ontology ;
    dcterms:title "Semantic Flow Flow Ontology" ;
    dcterms:description "Temporal and flow concepts for the Semantic Flow mesh, defining snapshots, versioning, temporal relationships, and flow metadata. Includes provenance tracking, versioning states, and dataset series management. The recommended prefix is 'flow' (alternatives: 'sfflow', 'temporal', 'tflow')." ;
    dcterms:creator "Semantic Flow Project" ;
    owl:versionInfo "0.1.0" ;
    mesh:preferredNamespacePrefix "flow" ;
    mesh:alternateNamespacePrefix "sfflow", "temporal", "tflow" .

#################################################################
#    Classes
#################################################################

flow:Snapshot a owl:Class ;
    rdfs:subClassOf mesh:Element, dcat:Dataset ;
    rdfs:label "Snapshot" ;
    rdfs:comment "Snapshots represent distinct states of a node flow (dataset), and contain actual RDF data files (aka Distributions)." .


flow:VersionSnapshot a owl:Class ;
    rdfs:subClassOf flow:Snapshot, mesh:FolderResource ;
    rdfs:label "VersionSnapshot" ;
    rdfs:comment "Historical version snapshot of a node flow, representing a specific versioned snapshot." .


flow:Config a owl:Class ;
    rdfs:subClassOf node:Flow, mesh:FolderResource ;
    rdfs:label "Config" ;
    rdfs:comment "Per-node config info for the flow-service." .

flow:Metadata a owl:Class ;
    rdfs:subClassOf node:Flow, mesh:FolderResource ;
    rdfs:label "Metadata" ;
    rdfs:comment "Centralized per-node metadata management for nodes and their elements." .

flow:Reference a owl:Class ;
    rdfs:subClassOf node:Flow, mesh:FolderResource ;
    rdfs:label "Reference" ;
    rdfs:comment "Reference resolution data elements that contain the data needed to resolve references to their targets, implementing the single referent principle." .

flow:Data a owl:Class ;
    rdfs:subClassOf node:Flow, mesh:FolderResource ;
    rdfs:label "Data" ;
    rdfs:comment "Actual content storage elements that contain the concrete data and information that forms the payload of data nodes." .


#################################################################
#    Object Properties
#################################################################

flow:hasSnapshot a owl:ObjectProperty ;
    rdfs:subPropertyOf prov:generalizationOf ; 
    rdfs:domainIncludes node:Flow ;
    rdfs:rangeIncludes flow:Snapshot ;
    schema:rangeIncludes flow:Snapshot ;
    rdfs:label "hasSnapshot" ;
    rdfs:comment "Associates a Flow with its snapshots. This property enables version management within flows and helps implement the prov: model" .


flow:hasVersionSnapshot a owl:ObjectProperty ;
    rdfs:subPropertyOf flow:hasSnapshot ;
    schema:domainIncludes node:Flow ;
    schema:rangeIncludes flow:VersionSnapshot ;
    rdfs:label "hasVersionSnapshot" ;
    rdfs:comment "Associates a Flow with its version snapshots." .

# Removed duplicatesSnapshot property - ephemeral CurrentSnapshot class was removed

flow:hasPreviousSnapshot a owl:ObjectProperty ;
    rdfs:subPropertyOf dcat:previousVersion ;
    rdfs:label "has previous snapshot" ;
    rdfs:comment "Links to the previous version snapshot of this snapshot." ;
    schema:domainIncludes flow:VersionSnapshot ;
    schema:rangeIncludes flow:VersionSnapshot .

flow:versioningState a owl:DatatypeProperty ;
    rdfs:label "versioning state" ;
    rdfs:comment "The versioning state of a flow: 'versioned', 'unversioned', or 'deversioned'." ;
    schema:domainIncludes node:Flow ;
    schema:rangeIncludes xsd:string .

flow:hasConfig a owl:ObjectProperty ;
    schema:domainIncludes node:Handle ;
    schema:rangeIncludes flow:Config ;
    rdfs:label "hasConfig" ;
    rdfs:comment "Links mesh nodes to their config flow." .

flow:hasMetadata a owl:ObjectProperty ;
    schema:domainIncludes node:Handle ;
    schema:rangeIncludes flow:Metadata ;
    rdfs:label "hasMetadata" ;
    rdfs:comment "Links mesh nodes to their metadata flow." .

flow:hasReference a owl:ObjectProperty ;
    schema:domainIncludes node:Handle ;
    schema:rangeIncludes flow:Reference ;
    rdfs:label "hasReference" ;
    rdfs:comment "Links mesh nodes to their reference flow." .

flow:hasData a owl:ObjectProperty ;
    schema:domainIncludes node:Handle ;
    schema:rangeIncludes flow:Data ;
    rdfs:label "hasData" ;
    rdfs:comment "Links mesh nodes to their data flow." .

# Distribution to Snapshot relationship (using DCAT standard)
# Note: Snapshots subclass dcat:Dataset, so dcat:distribution property links them to distributions
# Flow to Snapshot relationship already captured by flow:hasSnapshot and subproperties

#################################################################
#    Data Properties
#################################################################

#################################################################
#    Disjointness Axioms
#################################################################

### Snapshot types are disjoint
# Note: Only VersionSnapshot remains as concrete snapshot type
# Future snapshot classes would be added here if needed

### Flow types are disjoint
[ a owl:AllDisjointClasses ;
    owl:members ( flow:Config flow:Metadata flow:Reference flow:Data )
] .


#################################################################
#    SHACL Constraints
#################################################################

# Abstract Classes
flow:SnapshotShape a sh:NodeShape ;
    sh:targetClass flow:Snapshot ;
    sh:not [ sh:class flow:Snapshot ] ;
    sh:message "Snapshot is abstract - use VersionSnapshot or other concrete snapshot types" .

# Node-specific flow constraints
flow:ReferenceNodeShape a sh:NodeShape ;
   sh:targetClass node:Reference ;
   sh:property [
       sh:path flow:hasReference ;
       sh:class flow:Reference ;
       sh:minCount 1 ;
       sh:maxCount 1 ;
       sh:message "Every Reference node must have exactly one Reference flow"
   ] ;
   sh:not [
       sh:property [
           sh:path flow:hasData ;
           sh:minCount 1
       ]
   ] ;
   sh:message "Reference nodes cannot have Data flows" .

flow:DataNodeShape a sh:NodeShape ;
   sh:targetClass node:Data ;
   sh:property [
       sh:path flow:hasData ;
       sh:class flow:Data ;
       sh:minCount 1 ;
       sh:maxCount 1 ;
       sh:message "Every Data node must have exactly one Data flow"
   ] ;
   sh:not [
       sh:property [
           sh:path flow:hasReference ;
           sh:minCount 1
       ]
   ] ;
   sh:message "Data nodes cannot have Reference flows" .

# Distribution-Snapshot-Flow relationship constraints
flow:DistributionShape a sh:NodeShape ;
    sh:targetClass dcat:Distribution ;
    sh:property [
        sh:path [ sh:inversePath dcat:distribution ] ;
        sh:class flow:Snapshot ;
        sh:minCount 1 ;
        sh:message "Every Distribution must be associated with a Snapshot via dcat:distribution"
    ] .

flow:SnapshotDistributionShape a sh:NodeShape ;
    sh:targetClass flow:Snapshot ;
    sh:property [
        sh:path dcat:distribution ;
        sh:class dcat:Distribution ;
        sh:minCount 1 ;
        sh:message "Every Snapshot must have at least one Distribution"
    ] ;
    sh:property [
        sh:path [ sh:inversePath flow:hasSnapshot ] ;
        sh:class node:Flow ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Every Snapshot must be associated with exactly one Flow"
    ] .

flow:FlowSnapshotShape a sh:NodeShape ;
    sh:targetClass node:Flow ;
    sh:property [
        sh:path flow:hasSnapshot ;
        sh:class flow:Snapshot ;
        sh:minCount 1 ;
        sh:message "Every Flow must have at least one Snapshot"
    ] .

flow:FlowVersioningStateShape a sh:PropertyShape ;
    sh:targetClass node:Flow ;
    sh:path flow:versioningState ;
    sh:in ( "versioned" "unversioned" "deversioned" ) ;
    sh:message "Versioning state must be 'versioned', 'unversioned', or 'deversioned'" ;
    rdfs:label "Flow Versioning State Shape" ;
    rdfs:comment "Validates that flow versioning state uses controlled vocabulary" .
